{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "4GV-N5jAODxJ"
      },
      "source": [
        "import pandas as pd\n",
        "import keras\n",
        "from keras.models import Sequential, Model\n",
        "from keras.layers import Dense, Activation, Dropout\n",
        "from keras.optimizers import SGD\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sbn\n",
        "import numpy as np"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "28GCRvX7Q-pO",
        "outputId": "b54f4d20-5185-447d-9e6a-dbc0978cd9a5",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 74
        }
      },
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-dc7f814b-468a-4243-b010-3e9434a5e6be\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-dc7f814b-468a-4243-b010-3e9434a5e6be\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving Book2.csv to Book2.csv\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w1tqimeDOHiT",
        "outputId": "32aef248-2c8d-4009-f83f-9c9529e65ff0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 258
        }
      },
      "source": [
        "import io\n",
        "df2 = pd.read_csv('Cell Data_Autoencoder.csv')\n",
        "df2.head(7)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Area</th>\n",
              "      <th>Perimeter</th>\n",
              "      <th>Aspect Ratio</th>\n",
              "      <th>Extent</th>\n",
              "      <th>Equivalent Diameter</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>47125.5</td>\n",
              "      <td>876.914364</td>\n",
              "      <td>0.790769</td>\n",
              "      <td>0.564208</td>\n",
              "      <td>244.953159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>47722.0</td>\n",
              "      <td>853.699272</td>\n",
              "      <td>1.345455</td>\n",
              "      <td>0.732832</td>\n",
              "      <td>246.498555</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>30413.5</td>\n",
              "      <td>756.858519</td>\n",
              "      <td>0.840149</td>\n",
              "      <td>0.500271</td>\n",
              "      <td>196.783310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>41198.5</td>\n",
              "      <td>982.325678</td>\n",
              "      <td>0.984227</td>\n",
              "      <td>0.416550</td>\n",
              "      <td>229.031787</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>41654.0</td>\n",
              "      <td>838.033844</td>\n",
              "      <td>1.609756</td>\n",
              "      <td>0.615728</td>\n",
              "      <td>230.294420</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>65293.0</td>\n",
              "      <td>1098.198441</td>\n",
              "      <td>0.645933</td>\n",
              "      <td>0.578531</td>\n",
              "      <td>288.329030</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>28800.5</td>\n",
              "      <td>664.699131</td>\n",
              "      <td>1.190722</td>\n",
              "      <td>0.642667</td>\n",
              "      <td>191.493957</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Area    Perimeter  Aspect Ratio    Extent  Equivalent Diameter\n",
              "0  47125.5   876.914364      0.790769  0.564208           244.953159\n",
              "1  47722.0   853.699272      1.345455  0.732832           246.498555\n",
              "2  30413.5   756.858519      0.840149  0.500271           196.783310\n",
              "3  41198.5   982.325678      0.984227  0.416550           229.031787\n",
              "4  41654.0   838.033844      1.609756  0.615728           230.294420\n",
              "5  65293.0  1098.198441      0.645933  0.578531           288.329030\n",
              "6  28800.5   664.699131      1.190722  0.642667           191.493957"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TI-HFipAO6tv"
      },
      "source": [
        "SS = StandardScaler()\n",
        "\n",
        "x_n = SS.fit_transform(df2)\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "elvH5zjCT5zs",
        "outputId": "cb4ab4ef-afba-4293-fcfb-7b36f87798c3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "\n",
        "X_train, X_test = train_test_split(x_n, test_size = 0.2)\n",
        "print(X_train.shape, X_test.shape)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(1767, 5) (442, 5)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OtUSJlVvO74b"
      },
      "source": [
        "model = Sequential()\n",
        "\n",
        "model.add(Dense(5, input_dim = 5))\n",
        "\n",
        "model.add(Dropout(0.2))\n",
        "\n",
        "model.add(Dense(16, activation = \"relu\"))\n",
        "model.add(Dropout(0.2))\n",
        "\n",
        "model.add(Dense(4, activation = \"relu\"))\n",
        "\n",
        "model.add(Dense(2, activation = \"linear\", name = 'encoded'))\n",
        "\n",
        "model.add(Dense(4, activation = \"relu\"))\n",
        "\n",
        "model.add(Dense(16, activation = \"relu\"))\n",
        "\n",
        "model.add(Dense(5, activation = \"linear\"))\n",
        "\n",
        "opt = SGD(lr=0.01, momentum=0.9)\n",
        "\n",
        "model.compile(optimizer = opt, loss = \"mse\", metrics=['mae'])\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DurEV34yWtJD",
        "outputId": "9cad0097-f8e9-4a31-e398-7048bdcca7fd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        }
      },
      "source": [
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_53 (Dense)             (None, 5)                 30        \n",
            "_________________________________________________________________\n",
            "dropout_11 (Dropout)         (None, 5)                 0         \n",
            "_________________________________________________________________\n",
            "dense_54 (Dense)             (None, 16)                96        \n",
            "_________________________________________________________________\n",
            "dropout_12 (Dropout)         (None, 16)                0         \n",
            "_________________________________________________________________\n",
            "dense_55 (Dense)             (None, 4)                 68        \n",
            "_________________________________________________________________\n",
            "encoded (Dense)              (None, 2)                 10        \n",
            "_________________________________________________________________\n",
            "dense_56 (Dense)             (None, 4)                 12        \n",
            "_________________________________________________________________\n",
            "dense_57 (Dense)             (None, 16)                80        \n",
            "_________________________________________________________________\n",
            "dense_58 (Dense)             (None, 5)                 85        \n",
            "=================================================================\n",
            "Total params: 381\n",
            "Trainable params: 381\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EHByC8hPT3W6"
      },
      "source": [
        "from keras.callbacks import EarlyStopping, ReduceLROnPlateau"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g4zzUbm6T3Uc"
      },
      "source": [
        "ReduceLROnPlateau?"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sFbaWLZbT3SM"
      },
      "source": [],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b4ZV2WegT3Pc"
      },
      "source": [],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-K5NNKrXWKZf",
        "outputId": "c12a4242-4ea8-40d1-9709-a189b76b9c7f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "hist = model.fit(X_train, X_train, validation_data=(X_test, X_test), epochs=500,\n",
        "                 callbacks = [EarlyStopping(monitor='val_loss', patience=10),\n",
        "                             ReduceLROnPlateau(monitor='val_loss', patience=5)])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 1767 samples, validate on 442 samples\n",
            "Epoch 1/500\n",
            "1767/1767 [==============================] - 1s 513us/step - loss: 0.7500 - mean_absolute_error: 0.6465 - val_loss: 0.6128 - val_mean_absolute_error: 0.5411\n",
            "Epoch 2/500\n",
            "1767/1767 [==============================] - 0s 145us/step - loss: 0.5917 - mean_absolute_error: 0.5586 - val_loss: 0.5959 - val_mean_absolute_error: 0.5333\n",
            "Epoch 3/500\n",
            "1767/1767 [==============================] - 0s 151us/step - loss: 0.5470 - mean_absolute_error: 0.5221 - val_loss: 0.5660 - val_mean_absolute_error: 0.5012\n",
            "Epoch 4/500\n",
            "1767/1767 [==============================] - 0s 145us/step - loss: 0.5201 - mean_absolute_error: 0.5005 - val_loss: 0.5286 - val_mean_absolute_error: 0.4589\n",
            "Epoch 5/500\n",
            "1767/1767 [==============================] - 0s 157us/step - loss: 0.5421 - mean_absolute_error: 0.5134 - val_loss: 0.5085 - val_mean_absolute_error: 0.4478\n",
            "Epoch 6/500\n",
            "1767/1767 [==============================] - 0s 154us/step - loss: 0.4767 - mean_absolute_error: 0.4679 - val_loss: 0.4876 - val_mean_absolute_error: 0.4241\n",
            "Epoch 7/500\n",
            "1767/1767 [==============================] - 0s 156us/step - loss: 0.4568 - mean_absolute_error: 0.4561 - val_loss: 0.4419 - val_mean_absolute_error: 0.3979\n",
            "Epoch 8/500\n",
            "1767/1767 [==============================] - 0s 150us/step - loss: 0.4122 - mean_absolute_error: 0.4330 - val_loss: 0.4049 - val_mean_absolute_error: 0.3881\n",
            "Epoch 9/500\n",
            "1767/1767 [==============================] - 0s 153us/step - loss: 0.3949 - mean_absolute_error: 0.4194 - val_loss: 0.3516 - val_mean_absolute_error: 0.3402\n",
            "Epoch 10/500\n",
            "1767/1767 [==============================] - 0s 150us/step - loss: 0.3915 - mean_absolute_error: 0.4165 - val_loss: 0.3443 - val_mean_absolute_error: 0.3225\n",
            "Epoch 11/500\n",
            "1767/1767 [==============================] - 0s 155us/step - loss: 0.3578 - mean_absolute_error: 0.4017 - val_loss: 0.3246 - val_mean_absolute_error: 0.3151\n",
            "Epoch 12/500\n",
            "1767/1767 [==============================] - 0s 152us/step - loss: 0.3478 - mean_absolute_error: 0.3949 - val_loss: 0.3158 - val_mean_absolute_error: 0.3152\n",
            "Epoch 13/500\n",
            "1767/1767 [==============================] - 0s 156us/step - loss: 0.3611 - mean_absolute_error: 0.3883 - val_loss: 0.3110 - val_mean_absolute_error: 0.2917\n",
            "Epoch 14/500\n",
            "1767/1767 [==============================] - 0s 151us/step - loss: 0.3273 - mean_absolute_error: 0.3775 - val_loss: 0.3204 - val_mean_absolute_error: 0.3116\n",
            "Epoch 15/500\n",
            "1767/1767 [==============================] - 0s 157us/step - loss: 0.3240 - mean_absolute_error: 0.3744 - val_loss: 0.3141 - val_mean_absolute_error: 0.3012\n",
            "Epoch 16/500\n",
            "1767/1767 [==============================] - 0s 153us/step - loss: 0.3210 - mean_absolute_error: 0.3740 - val_loss: 0.3067 - val_mean_absolute_error: 0.2839\n",
            "Epoch 17/500\n",
            "1767/1767 [==============================] - 0s 154us/step - loss: 0.3142 - mean_absolute_error: 0.3634 - val_loss: 0.3222 - val_mean_absolute_error: 0.3230\n",
            "Epoch 18/500\n",
            "1767/1767 [==============================] - 0s 159us/step - loss: 0.3160 - mean_absolute_error: 0.3658 - val_loss: 0.3147 - val_mean_absolute_error: 0.3036\n",
            "Epoch 19/500\n",
            "1767/1767 [==============================] - 0s 153us/step - loss: 0.3015 - mean_absolute_error: 0.3551 - val_loss: 0.2919 - val_mean_absolute_error: 0.2576\n",
            "Epoch 20/500\n",
            "1767/1767 [==============================] - 0s 156us/step - loss: 0.3334 - mean_absolute_error: 0.3623 - val_loss: 0.3111 - val_mean_absolute_error: 0.2894\n",
            "Epoch 21/500\n",
            "1767/1767 [==============================] - 0s 151us/step - loss: 0.3125 - mean_absolute_error: 0.3607 - val_loss: 0.3153 - val_mean_absolute_error: 0.2992\n",
            "Epoch 22/500\n",
            "1767/1767 [==============================] - 0s 157us/step - loss: 0.3111 - mean_absolute_error: 0.3511 - val_loss: 0.2865 - val_mean_absolute_error: 0.2573\n",
            "Epoch 23/500\n",
            "1767/1767 [==============================] - 0s 152us/step - loss: 0.2989 - mean_absolute_error: 0.3460 - val_loss: 0.2930 - val_mean_absolute_error: 0.2763\n",
            "Epoch 24/500\n",
            "1767/1767 [==============================] - 0s 154us/step - loss: 0.3058 - mean_absolute_error: 0.3589 - val_loss: 0.2956 - val_mean_absolute_error: 0.2706\n",
            "Epoch 25/500\n",
            "1767/1767 [==============================] - 0s 152us/step - loss: 0.3141 - mean_absolute_error: 0.3649 - val_loss: 0.3053 - val_mean_absolute_error: 0.3016\n",
            "Epoch 26/500\n",
            "1767/1767 [==============================] - 0s 157us/step - loss: 0.2839 - mean_absolute_error: 0.3434 - val_loss: 0.2900 - val_mean_absolute_error: 0.2642\n",
            "Epoch 27/500\n",
            "1767/1767 [==============================] - 0s 153us/step - loss: 0.3254 - mean_absolute_error: 0.3734 - val_loss: 0.3102 - val_mean_absolute_error: 0.2947\n",
            "Epoch 28/500\n",
            "1767/1767 [==============================] - 0s 152us/step - loss: 0.3143 - mean_absolute_error: 0.3634 - val_loss: 0.2925 - val_mean_absolute_error: 0.2784\n",
            "Epoch 29/500\n",
            "1767/1767 [==============================] - 0s 163us/step - loss: 0.2914 - mean_absolute_error: 0.3438 - val_loss: 0.2868 - val_mean_absolute_error: 0.2650\n",
            "Epoch 30/500\n",
            "1767/1767 [==============================] - 0s 152us/step - loss: 0.2896 - mean_absolute_error: 0.3442 - val_loss: 0.2905 - val_mean_absolute_error: 0.2719\n",
            "Epoch 31/500\n",
            "1767/1767 [==============================] - 0s 154us/step - loss: 0.2813 - mean_absolute_error: 0.3387 - val_loss: 0.2948 - val_mean_absolute_error: 0.2777\n",
            "Epoch 32/500\n",
            "1767/1767 [==============================] - 0s 154us/step - loss: 0.3118 - mean_absolute_error: 0.3437 - val_loss: 0.2930 - val_mean_absolute_error: 0.2767\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vAVYRsXVRVy_",
        "outputId": "2b5bdb5d-704d-4adc-f7bb-324901381aa9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        }
      },
      "source": [
        "his_df = pd.DataFrame(hist.history)\n",
        "his_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>val_loss</th>\n",
              "      <th>val_mean_absolute_error</th>\n",
              "      <th>loss</th>\n",
              "      <th>mean_absolute_error</th>\n",
              "      <th>lr</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.612812</td>\n",
              "      <td>0.541128</td>\n",
              "      <td>0.749957</td>\n",
              "      <td>0.646547</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.595856</td>\n",
              "      <td>0.533253</td>\n",
              "      <td>0.591708</td>\n",
              "      <td>0.558571</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.566024</td>\n",
              "      <td>0.501182</td>\n",
              "      <td>0.547047</td>\n",
              "      <td>0.522129</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.528626</td>\n",
              "      <td>0.458925</td>\n",
              "      <td>0.520099</td>\n",
              "      <td>0.500548</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.508507</td>\n",
              "      <td>0.447832</td>\n",
              "      <td>0.542128</td>\n",
              "      <td>0.513402</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   val_loss  val_mean_absolute_error      loss  mean_absolute_error    lr\n",
              "0  0.612812                 0.541128  0.749957             0.646547  0.01\n",
              "1  0.595856                 0.533253  0.591708             0.558571  0.01\n",
              "2  0.566024                 0.501182  0.547047             0.522129  0.01\n",
              "3  0.528626                 0.458925  0.520099             0.500548  0.01\n",
              "4  0.508507                 0.447832  0.542128             0.513402  0.01"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yJVj7l7pRV1i",
        "outputId": "6b4e8f57-30b2-4a6e-b1e4-10a403b131ad",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        }
      },
      "source": [
        "his_df.loc[:, ['loss', 'val_loss']].plot()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f05f0b975c0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAD8CAYAAACMwORRAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzt3XlcVXX+x/HXl33fBEEFFQVXcMV9\nKS23Fq3MzGyzbDHTmqZ+7Y3j1LRN62RZOdqmqZk2Nqa2aLmVgju4IK6AIqCsAgL3fn9/HCw1FYQL\n5174PB8PHnLvPfecz+E+fHP4nu+itNYIIYSoX5zMLkAIIYTtSbgLIUQ9JOEuhBD1kIS7EELUQxLu\nQghRD0m4CyFEPSThLoQQ9ZCEuxBC1EMS7kIIUQ+5mHXg4OBg3bJlS7MOL4QQDmnz5s3ZWuuQyrYz\nLdxbtmxJQkKCWYcXQgiHpJQ6XJXtpFlGCCHqIQl3IYSohyTchRCiHjKtzV0I0TCVlZWRlpZGSUmJ\n2aXYNQ8PD8LDw3F1da3W+yXchRB1Ki0tDV9fX1q2bIlSyuxy7JLWmhMnTpCWlkZkZGS19iHNMkKI\nOlVSUkKjRo0k2C9BKUWjRo1q9NeNhLsQos5JsFeupj8j08L9RGGpWYcWQoh6z7Rwzyo8bdahhRAN\nnI+Pj9kl1DrTwr3MYqWotNyswwshRL1mapv7/sxTZh5eCNHAaa154okniImJITY2lgULFgBw7Ngx\nBg4cSJcuXYiJiWHt2rVYLBbuvvvu37d96623TK7+0kztCpmSVUBsuL+ZJQghTPT3b5PYdTTfpvvs\n0NSPv13fsUrbLl68mG3btrF9+3ays7Pp0aMHAwcOZN68eQwbNoxnn30Wi8VCUVER27ZtIz09ncTE\nRAByc3NtWretmXblroB9xwvNOrwQQrBu3TrGjRuHs7MzoaGhXHHFFcTHx9OjRw/mzJnDtGnT2Llz\nJ76+vrRq1YoDBw4wZcoUVqxYgZ+fn9nlX5JpV+5uLk6kZEq4C9GQVfUKu64NHDiQNWvWsGzZMu6+\n+24ee+wx7rzzTrZv387KlSuZOXMmCxcuZPbs2WaXelGmXbm7uzhLuAshTDVgwAAWLFiAxWIhKyuL\nNWvW0LNnTw4fPkxoaCj33XcfEydOZMuWLWRnZ2O1Whk9ejQvvvgiW7ZsMbv8SzLtyt3D1YnDJ4so\nLbfi5iJjqYQQde/GG2/k119/pXPnziileO211wgLC+PTTz/l9ddfx9XVFR8fHz777DPS09OZMGEC\nVqsVgJdfftnk6i9Naa1NOXBUh866fOQ/+f4vA2kT6mtKDUKIurd7927at29vdhkO4UI/K6XUZq11\nXGXvNa9ZxtU4tNxUFUII2zO1zV0ppN1dCCFqgWnh7qQgPNCTfZkFZpUghBD1lql3MqNCfOTKXQgh\naoGp4R4d6suB7FNYrObc1BVCiPrK9Cv30nIrqSeLzCxDCCHqHXPDPdSYdlOaZoQQwrbMDffGRrjv\nk3AXQtipS839fujQIWJiYuqwmqozNdz9PFwJ9XOXK3chhLCxKk0/oJQaDrwDOAOztNavnPf6W8Cg\niodeQGOtdUBV9h3V2IcU6Q4pRMO0/CnI2GnbfYbFwohXLvryU089RUREBJMnTwZg2rRpuLi4sHr1\nanJycigrK+PFF19k1KhRl3XYkpISJk2aREJCAi4uLrz55psMGjSIpKQkJkyYQGlpKVarla+//pqm\nTZtyyy23kJaWhsVi4fnnn2fs2LE1Ou3zVRruSilnYAYwBEgD4pVSS7XWu85so7X+y1nbTwG6VrWA\nqBAfFm1OQ2sti+YKIWrd2LFjefTRR38P94ULF7Jy5UqmTp2Kn58f2dnZ9O7dm5EjR15WJs2YMQOl\nFDt37mTPnj0MHTqU5ORkZs6cySOPPML48eMpLS3FYrHw3Xff0bRpU5YtWwZAXl6ezc+zKlfuPYEU\nrfUBAKXUfGAUsOsi248D/lbVAqJCfTlVauFYXglNAzyr+jYhRH1wiSvs2tK1a1cyMzM5evQoWVlZ\nBAYGEhYWxl/+8hfWrFmDk5MT6enpHD9+nLCwsCrvd926dUyZMgWAdu3a0aJFC5KTk+nTpw8vvfQS\naWlp3HTTTURHRxMbG8tf//pXnnzySa677joGDBhg8/OsSpt7MyD1rMdpFc/9iVKqBRAJrLrI6/cr\npRKUUglZWVmAceUO0mNGCFF3xowZw6JFi1iwYAFjx45l7ty5ZGVlsXnzZrZt20ZoaCglJSU2OdZt\nt93G0qVL8fT05JprrmHVqlW0adOGLVu2EBsby3PPPcf06dNtcqyz2fqG6q3AIq215UIvaq0/0lrH\naa3jQkJCAIiW7pBCiDo2duxY5s+fz6JFixgzZgx5eXk0btwYV1dXVq9ezeHDhy97nwMGDGDu3LkA\nJCcnc+TIEdq2bcuBAwdo1aoVU6dOZdSoUezYsYOjR4/i5eXF7bffzhNPPFErc8NXpVkmHYg463F4\nxXMXcisw+XIKaOTtRoCXq3SHFELUmY4dO1JQUECzZs1o0qQJ48eP5/rrryc2Npa4uDjatWt32ft8\n6KGHmDRpErGxsbi4uPDJJ5/g7u7OwoUL+fzzz3F1dSUsLIxnnnmG+Ph4nnjiCZycnHB1deWDDz6w\n+TlWOp+7UsoFSAauwgj1eOA2rXXSedu1A1YAkboKk8THxcXphIQEAG7+YANOSrHwwT7VOgkhhOOQ\n+dyrrlbnc9dalwMPAyuB3cBCrXWSUmq6UmrkWZveCsyvSrCfLzrUR2aHFEIIG6pSP3et9XfAd+c9\n98J5j6dVt4jWIT7kFJVxovA0jXzcq7sbIYSoFTt37uSOO+445zl3d3c2btxoUkWVM20N1bNFVyyz\nl5JZKOEuRAPgaONaYmNj2bZtW50es6ZLoNrFytQyx4wQDYeHhwcnTpyocXjVZ1prTpw4gYeHR7X3\nYRdX7k39PfB2c5bukEI0AOHh4aSlpXFmrIu4MA8PD8LDw6v9frsId6UUrRvLqkxCNASurq5ERkaa\nXUa9ZxfNMiBL7gkhhC3ZT7iH+pCRX0J+SZnZpQghhMOzn3CvmGNmv1y9CyFEjdlNuJ/dHVIIIUTN\n2E24RwR64ubsJOEuhBA2YDfh7uLsRGSwt4S7EELYgN2EOxg3VWUgkxBC1Jx9hXuID6k5RZSUXXA6\neCGEEFVkV+EeHeqD1rA/S67ehRCiJuwq3M/MMSPt7kIIUTN2Fe6Rwd44KenrLoQQNWVX4e7u4kyL\nRt5yU1UIIWrIrsIdjIU7pFlGCCFqxu7CPTrUh4PZpyizWM0uRQghHJbdhXtUiA/lVs3hE0VmlyKE\nEA7L7sI9OlR6zAghRE3ZXbi3DjkT7gUmVyKEEI7L7sLd292Fpv4ecuUuhBA1YHfhDhAV6ivdIYUQ\nogbsM9xDfNifVYjVKqujCyFEddhluEeH+lBSZiU9t9jsUoQQwiHZZbjLHDNCCFEz9hnuIRLuQghR\nE3YZ7oHebgT7uLFPukMKIUS12GW4g8wxI4QQNWG34R5dseSe1tJjRgghLpd54Z5/FMpKLvpyVIgP\nBSXlZBWcrsOihBCifjAv3AuPw4cDIDX+gi9Hh/oCyGAmIYSoBvPCvVFrKC2C2UPh++eg7Nw+7dId\nUgghqq9K4a6UGq6U2quUSlFKPXWRbW5RSu1SSiUppeZVulN3P3joV+h2J2z4N8zsD0c2/v5yY193\nfN1dJNyFEKIaKg13pZQzMAMYAXQAximlOpy3TTTwNNBPa90ReLRKR/fwg+vfgTu+gfJSmD0MVjwD\npUUopYgK9ZHukEIIUQ1VuXLvCaRorQ9orUuB+cCo87a5D5ihtc4B0FpnXlYVrQfBQxugx73w2wyY\n2Q8ObyAqxIeUzFOXtSshhBBVC/dmQOpZj9MqnjtbG6CNUmq9Uuo3pdTwC+1IKXW/UipBKZWQlZV1\n7ovuvnDtG3DXt2C1wJxruCvvfU4V5pFbVFr1MxJCCGGzG6ouQDRwJTAO+FgpFXD+Rlrrj7TWcVrr\nuJCQkAvvKXKg0Rbf6wFi0uazwu0pjiWttVGZQgjRMFQl3NOBiLMeh1c8d7Y0YKnWukxrfRBIxgj7\n6nHzhhGvcvymJSg0rVfeBVnJ1d6dEEI0NFUJ93ggWikVqZRyA24Flp63zTcYV+0opYIxmmkO1LS4\n4JhBTNDPU4oLzBsDp7JrukshhGgQKg13rXU58DCwEtgNLNRaJymlpiulRlZsthI4oZTaBawGntBa\nn6hpcc5OilbRHbmv7HF0QQZ8Oe6So1qFEEIYlFlzt8TFxemEhIRKt9ufVciwt9YwLTqF2w8/Dx1v\ngtH/ASe7nRZHCCFqjVJqs9Y6rrLt7D4hW4f4cFffljyf3JqMnk9D0mJY/ZLZZQkhhF2z+3AHmDo4\nmgBPVx45MhDd7S5Y+y/Y+oXZZQkhhN1yiHD393LlsaFt2Xgoh5UtHodWg+DbR+DAL2aXJoQQdskh\nwh1gXI8I2ob68uKKFEpunAONomHhHZC11+zShBDC7jhMuLs4O/HC9R1Iyylm9uYTcNsCcHaHuWOg\nMKvyHQghRAPiMOEO0C8qmCEdQpmxKoVM51AYNx8KM2H+uD9NGSyEEA2ZQ4U7wDPXtKfUYuX1lXsh\nvDvc9BGkJcA3k8BqNbs8IYSwCw4X7pHB3kzoF8miLWnsTMuDDiNhyHRIWgKr/mF2eUIIYRccLtwB\nHh4cRZCXG9P/l2QsoN13CnSfAOvehB1fmV2eEEKYziHD3c/DlceHtSX+UA7Ldh4DpeCaf0FEb1j2\nV8g7f14zIYRoWBwy3AFuiYugfRM/Xv5uDyVlFnB2gRs/AGs5/HcymDStghBC2AOHDXdnJ8UL13Ug\nPbeYj9dUTEAZ1AqG/gMOrIb4WeYWKIQQJnLYcAfo07oRwzuG8f7P+8nIq5gtMu4eaH0V/PACnNhv\nboFCCGEShw53MLpGWqya11buMZ5QCka9B86usORBY8k+IYRoYBw+3Js38uKe/pEs3pLOttRc40m/\npnDNG5C2Cda/Y26BQghhAocPdzC6Rgb7uDP924qukQCxN0OHUbD6n5CRaG6BQghRx+pFuPu4u/B/\nw9qy5Ugun244ZDypFFz7FngGGs0z5aWm1iiEEHWpXoQ7wM3dwxncrjF//98ulmxNM570bgQj34Xj\nO+GXV8wtUAgh6lC9CXcnJ8X747vRO7IRj3+1gxWJGcYLbUdA19th3VuQuumy9/vFb4eZ9MVmyiwy\nb40QwnHUm3AH8HB15uO74ugU7s/UL7eyJrliKuBhL4NfuNE8U3qqSvuyWDV//zaJ575JZHliBqv2\nZNZi5UIIYVv1KtzBaH//5O6eRDX24f7PE9h08CR4+MENM+DkfvhxWqX7KCot54HPNzNn/SEm9GtJ\nY193FsSn1n7xQghhI/Uu3MFYlu+ze3vSLMCTez6JZ0daLkQOhN4PwaaPYP/qi743M7+EWz78lVV7\njvP3kR352/UdGRMXzs97MzmWJ3PGCyEcQ70Md4BgH3e+mNiLAC9X7py9ib0ZBXDVCxDcxph7pjj3\nT+/Zk5HPDTPWcyDrFLPuiuOuvi0BGBvXHKuGRQlpdXwWQghRPfU23AGa+Hsyb2Jv3F2cGD9rIwfz\nrHDjTCjIgBVPnbPtL8lZ3PzBr1i0ZuEDfRjcLvT315o38qJfVCMWJKRitcqEZEII+1evwx2MYJ47\nsRdWrRn/8W+ke3eAAX+F7V/CymfBUs68jUe455N4IoK8+GZyP2Ka+f9pP2N7NCctp5j1+7NNOAsh\nhLg89T7cAaIa+/LZPT0pOF3O+I9/I7P7I9Dzfvj1PQ6/PYQ3lqxjYHQwXz3Yhyb+nhfcx9AOoQR4\nuTJfbqwKIRxAgwh3gJhm/nwyoSeZBae5Y/YWjvWbzpzQp2mcn8gq3xf4eLDGx93lou/3cHXmxq7N\n+D4pg5OnZLSrEMK+NZhwB+jeIpBZd8Zx8MQprnjtZ6YfiWV5r8/w8/bC5dNrIf4/l1zk49YezSmz\naBZvkRurQgj71qDCHaBvVDAzb+9GeKAnH4zvzk3XjEDd/zO0uhKWPWb0pCm7cJfHtmG+dG0ewPz4\n1D8mKBNCCDvU4MIdYHC7UFY9fiXDY8KMJ7yC4LaFcMWTsG0uzB4GOYcv+N5be0SQklnIliM5dVix\nEEJcngYZ7hfk5ASDnoFxC+DkIfjoCkj56U+bXdepKd5uzszfJDdWhRD2S8L9fG2Hw/2rwbcJfDEa\n1rwO1j8mDfN2d2Fkl6b8b8cxCkrKTCxUCCEuTsL9Qhq1hok/QsxoWPUiLLgdSvJ/f3lsj+YUl1lY\nuv2oiUUKIcTFVSnclVLDlVJ7lVIpSqmnLvD63UqpLKXUtoqvibYvtY65ecPoWTD8FUheAf8Z8vuC\n253D/WkX5iuTiQkh7Fal4a6UcgZmACOADsA4pVSHC2y6QGvdpeJrlo3rNIdS0HsS3LEECo/Dx4Nh\n/yqUUoztEcGOtDySjuaZXaUQQvxJVa7cewIpWusDWutSYD4wqnbLsjOtroD7VhsLb38xGn6dwY1d\nmuLm4iRX70IIu1SVcG8GnJ1gaRXPnW+0UmqHUmqRUirCJtXZk6BIuPcHaHsNrHyGgO8f5foOgSzZ\nmk5JmcXs6oQQ4hy2uqH6LdBSa90J+AH49EIbKaXuV0olKKUSsrKybHToOuTuA7d8Dlc+DdvnMe3k\nk3iUZLE88ZjZlQkhxDmqEu7pwNlX4uEVz/1Oa31Ca3264uEsoPuFdqS1/khrHae1jgsJCalOveZz\ncoIrn4JbPscnbx/feT5P/Lofza5KCCHOUZVwjweilVKRSik34FZg6dkbKKWanPVwJLDbdiXaqQ4j\nURN/wM3dk79lP07muk/MrkgIIX5XabhrrcuBh4GVGKG9UGudpJSarpQaWbHZVKVUklJqOzAVuLu2\nCrYroR0pnfADW3Q0jX985Pf54YUQwmzKrAmw4uLidEJCginHtrUHP/2NQYfeZqxeDh1ugFsueMtB\nCCFqTCm1WWsdV9l2MkLVBsb0jOTJ4jvY12EK7PoGUqQNXghhLgl3G7iiTQihfu68WjgcAiPh++fB\nKt0jhRDmkXC3ARdnJ26Ji+CnfXmc7PssZO6CrZ+bXZYQogGTcLeRW+Ii0Bo+z+0MzfvAqpfgdIHZ\nZQkhGigJdxuJCPJiYJsQPlizn59bToVTmbDubbPLEkI0UBLuNvSvMZ3o1CyAu7/X7AgYgv71PciT\n9VaFEHVPwt2GGvt6MPe+Xtw3IJJJGddRVm6haMXfzC5LCNEASbjbmKuzE89e24Fnxw/jM30NXrsX\nsW3jarPLEkI0MBLuteSa2CYMnvgKOcqfkmVPM2PVPqxWcwaMCSEaHgn3WtQqoileQ5+jt9Nutv84\nl/s/TyCvWNZdFULUPgn3Wube8x50cFteD/ia9XuPMfK9dew6ml/5G4UQogYk3Gubswtq6D/wLzrC\nyv77KCmzcOP761m0WXrRCCFqj4R7XYgeCpFX0Hznv1l2Xyxdmwfw+FfbmbE6xezKhBD1lIR7XVAK\nhr0ExbkEb3mXL+7txYiYMN75aR+pJ4vMrk4IUQ9JuNeVsFjoMh42fohL3iFeuL4Dzkrxz+/q/7om\nQoi6J+FelwY/B86u8OM0mvh78uAVrVmemMFvB06YXZkQop6RcK9Lfk2g3yOw679w5DfuH9iKpv4e\nTP92FxbpAy+EsCEJ97rWdwr4NoGVz+Lp6sRT17Rn17F8Fm1ONbsyIUQ9IuFe19y8jeaZ9ARI/Jrr\nOzWhe4tAXl+5l4ISGeAkhLANCXczdB4HTbrA8idRp7J54boOZBeW8p50jRRC2IiEuxmcnOHGmcZi\nHt9OpXO4P6O7hTNn3SEOnzhldnVCiHpAwt0sjdvDVS/A3u9g6xf83/C2uDhL10ghhG1IuJup90PQ\ncgCseIpQSwYPXdmalUnH2bA/2+zKhBAOTsLdTE5OcMP7oJxgyYNM7NeCZgGe0jVSCFFjEu5mC2gO\nI16DI7/iEf8+T1/Tjj0ZBSyIl66RQojqk3C3B51vhfbXw+qXuLbxCXq2DOKN7/eSL10jhRDVJOFu\nD5SC694BjwDU4gd4YURrThaV8t4q6RophKgeCXd74d0IRr0HmUnE7P03N3cLZ876gxzMlq6RQojL\nJ+FuT9oMg+53w4Z/80zMSdycnaRrpBCiWiTc7c3QlyCwJYErp/LowDB+2HWc9SnSNVIIcXkk3O2N\nuw/c+CHkpTGh4CMigoyukeUWq9mVCSEciIS7PWreC/o9isv2ubzd+Sh7jxfw+FfbySuW3jNCiKqR\ncLdXVz4NYbF02/43nhzQiG93HGP422v4JTnL7MqEEA6gSuGulBqulNqrlEpRSj11ie1GK6W0UirO\ndiU2UC5ucNPHqNMFTMp/h8UP9sHb3YW7Zm/i6cU7KTxdbnaFQgg7Vmm4K6WcgRnACKADME4p1eEC\n2/kCjwAbbV1kg3XW5GKd837if1P688DAVsyPP8Lwt9fIHDRCiIuqypV7TyBFa31Aa10KzAdGXWC7\nfwCvAiU2rE/0fggad4RfXsXDWfH0Ne1Z9GAfXJwUt328kWlLkygqlat4IcS5qhLuzYCzJzpJq3ju\nd0qpbkCE1nqZDWsTYEwuNuAxyE6G3UsB6N4iiOWPDOTuvi35ZMMhrnlnLQmHTppcqBDCntT4hqpS\nygl4E/hrFba9XymVoJRKyMqSG4NV1vFGCGoNa98AbcwW6enmzLSRHfnyvt6UWzVjPvyVl5btoqTM\nYnKxQgh7oLS+9NSySqk+wDSt9bCKx08DaK1frnjsD+wHCiveEgacBEZqrRMutt+4uDidkHDRl8X5\ntnwOSx+G8Ysgesg5LxWeLufl73Yzd+MRWjbyoldkIyKCPIkI8jK+Ar0I9nFDKWVS8UIIW1FKbdZa\nV9pppSrh7gIkA1cB6UA8cJvWOuki2/8MPH6pYAcJ98tWXgrvdgX/cLhnhTHZ2HnW7svi3Z/2cTC7\niOzC0+e85unqbAR+oBH44YGedG0eSPcWgXV1BkIIG6hquLtUtoHWulwp9TCwEnAGZmutk5RS04EE\nrfXSmpcrKuXiBv0egeVPwOH10LL/nzYZEB3CgOgQAIpKy0nLKSb1ZBGpJ4s4crKY1Bzj+98OnOBU\nqdF8M2dCDwa1bVynpyKEqH2VXrnXFrlyr4ayYni7E4R2hDu/qfZutNZkF5Zyx382cjy/hGVTB9A0\nwNOGhQohaktVr9xlhKojcfWEPpPhwGpI31zt3SilCPF15/3x3SizaCbP20JpucxdI0R9IuHuaHrc\nCx4BsOaNGu+qVYgPr4yOZeuRXF5bsccGxQkh7IWEu6Nx94VeD8LeZXD8gve0L8t1nZpyV58WzFp3\nkBWJGTYoUAhhDyTcHVGvB8DNB9a+aZPdPXNtezqF+/PEou0cOVFkk30KIcwl4e6IvIIg7h5IWgwn\n9td4d+4uzsy4rRsKeGjeZhkIJUQ9IOHuqPo8DE6usO4tm+wuIsiLN27pQmJ6Pi8u22WTfQohzCPh\n7qh8Q6HbnbB9PuSl2WSXQzqE8sDAVnzx2xH+uy3dJvsUQphDwt2R9XsE0LDh3zbb5ePD2hLXIpCn\nF+8kJbOw8jcIIeyShLsjC4iATrfC5k+h0DYTsbk6O/Hv27ri4erM5LlbKC6V9nchHJGEu6Pr/xew\nnIbfZthsl038PXl7bBeSMwt44b+JNtuvEKLuSLg7uuAo6HADbJoFxTk22+3ANiFMGRzNV5vTWJiQ\nWvkbLlN+SRlf/HaYzHxZ20WI2iDhXh8M+CuUFsCmj22620euiqZv60Y8/00iu4/l22SfRaXlfPDz\nfga8uprnvknkvs83y9QHQtQCCff6ICwG2oyA396H07a7CerspHjn1q74eboyZuavPLNkJzvT8qjO\nZHOnyy18uuEQA1/7mVdX7KFb8wCeHtGO7am5vLx8t81qFkIYKp3yVziIgY/DrKtg8xzoO8Vmuw3x\ndefL+3rx/s/7WbwljXkbj9ChiR+39oxgVOdm+Hu5XvL95RYri7em886P+0jPLaZXZBAzb+9GXMsg\nADLyS5iz/hC9IoMYHtPEZnUL0dDJlL/1yacjIWsPjPsSmnQ11l+1obziMpZuP8qC+CMkpufj7uLE\nNbFNGNsjgl6RQees9GS1ar5LPMabPyRzIOuUMb3BsLb0jwo+Z7vScitjPvyVA5mF/G9qf1o08rZp\nzULUNzZbiam2SLjXgiO/wafXg6UUvBpB66sg6mpoPRh8Qmx6qMT0PBbEp/LNtnQKSsqJDPbmlrgI\nRndvRmJ6Hq+vTGb3sXzahPrw2JC2DOsYetFl/tJyirj23XWEB3ry9aS+eLg627RWIeoTCfeG6lQ2\n7F8FKT9Cyk9QlA0oaNrFCPqoq6FZHDjbpkWuuNTC8sRjzI9PZdPBk78/3zzIi78MiWZk52Y4O1W+\ndutPu49z76cJjO/VnJdujLVJbULURxLuAqxWyNhuBP2+HyFtE2grePhDq0HQ/nqIGX3B9VirY39W\nIf/ddpSm/h6M7h6Oq/PlNQu9vHw3H/5ygHdu7cKoLs1sUpMQ9Y2Eu/iz4hw48MsfV/UFR6HDKBj5\nHnj4mV0dZRYrt338G0lH81n6cH+iGvuYXZIQdkeW2RN/5hkIHW+AUe/BY7tgyD9g9//g40Fw3PyZ\nIF2dnfj3uG4y9YEQNiDh3lApBf2mwl3fwukCoxvl9gVmV0WYv4dMfSCEDUi4N3Qt+8EDa6FpV1hy\nP/zvMSg/bWpJA9uEMGVQFF9tTuOrWpj6QIiGQMJdGHPD37nUmEI44T8wezjkHjG1pEeubkOfVo14\n/r+J7M0oMLUWe/DT7uM8+PlmjuYWm12KcBAS7sLg7AJDpsPYuXAiBT4cCPt+MK8cJ8U747rg6+HK\npLmbOXW63LRazLb7WD4Pz9vKiqQMRr63jvhDJyt/k2jwJNzFudpfB/f/DH7NYO4YWPUSWM25sdnY\n14N3b+3KoexTPPn1Do7lFWO1mtO7yyy5RaXc/3kCvh4uzJvYCx93F277+De+3GTuX1bC/klXSHFh\npUXw3eOwba7RJ370LPAONqWUGatTeH3lXgDcnJ0ID/QkPMiL5kGeRAR60TzIi4iKL3/PS89140jK\nLVYmfBLPxgMnmf9Ab7o1DyQ47lRlAAAVB0lEQVSvqIwp87eyJjmLO/u04PnrOlz2eIKGYOOBEzg7\nKbq3CLzoyGhHJf3cRc1pDVs+g++eACdnaDvCGPQUdTW4uNdhGZqNB0+SkllI6skiUnOKSD1ZzJGT\nReQVl52zrZ+HCxFBXjQN8KSpvwdNAzxpEuBJswDj+8a+HlUaMfsnlopmIRuN7K2Kl7/bzYdrDvDq\n6FjG9mj+RylWzasr9vDRmgP0bhXEjNu60cin7j4Pe7c/q5ARb6+l1GIlppkfE/pGcl3nJri71I9p\nLSTche0cT4L4WZD0DRSfBHd/aHetEfStrgDnWr5aLsmDtHho3AH8mp7zUl5xGakni0jLKeLISSP0\nU3OKOJZbwtG8YgpKzm2rd3ZShPl50KQi+KMb+9A3KpjO4f64XOgK2GqFrZ/Dj9NAW4xfbNHDIHoI\neAXV2ikv3X6UqV9u5Y7eLfjHDTEX3GbJ1jSe/HonIT7ufHxnHB2amj8QzWxaa8bP2khieh6PXt2G\nLzcdYV9mIcE+7ozv1ZzxvZvT2NfD7DJrRMJd2J6lDA7+AomLjcFPp/PAM8gY5RpzE7ToZ1zh2+RY\n5cYcOdu/hD3LjKUEAYJaGcdpOcDoxukffsndFJSUcSyvhPTcYo7mFhuhn1vM0bxi0nOLScspRmvw\ndXehd+tG9I8Kpl9UMK1DvFEZO2HZY8YvluZ9ISgS9n0Pp7JAOUF4D2gzzAj70I42m8Yh6Wgeoz/Y\nQGwzf+ZO7I2by8WbXban5nL/5wnkF5fz5i2dGRHbsKdNXrI1jb8s2M5LN8YwvlcLtNasS8lmzvpD\nrNqTiZuzE9d1bsI9/SKJaeZvdrnVIuEualf5aWMKg8SvYe93UFYEPqHQ8UZjFsqwTuAbdvmBl7ET\ntn0JO7+CU5nGL4/Ym40QzdoLh9bD4fVQkmtsH9gSWvQ3gr5FPwhscVmHyzlVyob9J1iXks36lGyO\nnCzChyKe917CGMtyytwCOD347/j1usM4F6sVjm6F5BVYk1filLEdgNNeTTgedgWHgwZwwLcbV8a0\nqNb0xTmnSrn+vXWUWzTfTulPiG/lzS2Z+SU8+MVmthzJZeqg1jza2x8nrwBw9bzs4zuyvKIyBr/x\nM80befH1g31xOq/57UBWIZ9uOMRXm9MoKrXQo2Ug9/SLZEiH0Av/1WanJNxF3Sk9BckrIWkxJH//\nx1W2VzCExUKTTkbYh8VCo6g/X90XZBhhvn0+HE8EJ1cjzLvcBlFDwMXt3O2tVshMgkPrjK/D6/9Y\nP9a/OUQO+GOqY8+Aqp+H1mT/Ng/vn1/A/fQJvmIoL5WMJh8f2ob6EujtSm5RGXnFZeQWlVFcZqEx\nOQxy3sZVTlvo55SItzpNsXbjX9ZxOPeZxMODo/DzqFqzVbnFyl1zNhF/KIevHuhD54hL1G61Qn4a\nZCVD1h4smbtJ3buVwKKD+KsirL5NcLr3BwiIqPr517FD2adYnphBduFpnhze7pJ/oVTFM0t2siA+\nlW8f7n/JJqr8kjIWxqfyyYZDpOUU0yzAk5dujOHKto1rdPy6IuEuzHG6EDJ2GFfgZ/7N3G3MMQ/g\n4mk0YYTFQqPWcOBno/lFW42piDvfarTlX057ttUKWbv/CPuDa4wre+UMzXsb7ePRQ402+4v9JZGV\nDN/91Xhv065w7RtYm3Qj6Wg+61Ky2bA/m5IyC/6ebgR4uRLo5UqAlxv+nq4Vj90IcLPS+GQCPltn\n4Xn4Jz4qv5YP3e7i0aHtGNcjotKrwxf/t4tZ6w7y+s2dGBN3XijnH4UdCyBzD2TvNeotO/XH617B\n6JC27LU0ZckhNyY7LyFLBTLZ/RXwDMDPwxUfDxd8PVzwcXfB18MV34rHPVoG0b5J7bfXa63Zl1nI\n8p0ZLE88xp6zBqfd3D2c12/uVO2eLZsP5zD6gw1M7B/Jc9d1MDoDVLIvi1Xz4+7jvPVDMvsyC3nl\nptg//9ztiNaaJ7/ewetjuki4CztRXgrZyRWBfyb0dxg3Sv3CofNY6HQrhLSxzfGsFkhLMNrH9600\njgnGsc4EfeRAcPcxunyu/ResfxfcvOCqF6D7hJrdO7BaYPmTEP8x6z2uYELuPbQMDeTZaztwRZsL\nL5ryzdZ0Hl2wjbv7tmTayI7nvpj8PSx5wLiZ7dsUQtqe9dUOgtuCd6PfN998+CTJG1cwZvdUDnu0\n51+hr5JTqig8XU5BSTmFJca/pZY/FiYf3K4xkwe1pnsL294k1lqTmJ7P8sRjrEjK4EDWKZSCHi2C\nGB4TxrCYMBbEp/LuT/v4v+FteejKqMs+RrnFynX/XkdecRk/PHYFPieT4Ku7jbEao2ZU2lRXUFLG\npC+2sC4lm8eHtmHyoCi77D55pkvw4Vevs124K6WGA+8AzsAsrfUr573+IDAZsACFwP1a60tOMyjh\n3sBpDYWZ4B1i8+UA/yT/qDHNcfJK4y+F0kJwdoOW/SE7BfKOQOfbjBG6tlqxSmtY/zb8OI0TIT25\n89RUkk46cWXbEJ67tj1RjX1/3zQx3biB2iUigC8m9vqj37qlDFa9aOwnNAZunnN5vwATv4ZF9xg3\nvG/+5E8/55IyCzlFpSxKSGP2+oPkFJXRKzKIhwZFMTA6uNoBZ7FqtqXmsHxnBiuSMkjLKcbZSdG7\nVRAjYpowtGPoOT1WtNY8Mn8bS7cf5YPx3S77pvCstQd4cdluZt7eneGWn+HbR4wZUM8sFj/iVaOJ\n7xLnU1pu5cmvd7Bkazq3927O30fGVK/LbC1ZvvMYk+ZuYVSXprw7rpttwl0p5QwkA0OANCAeGHd2\neCul/LTW+RXfjwQe0loPv9R+JdyFKcpL4civFVf1Pxg3HYf907ghWxu2L4D/TsbaKIr50W/x8oZ8\nikot3N6rOY9e3Qar1ox8bz1aa5ZO6U/wmf7qeWmw6F5I/Q263w3DX6neDdIN78H3z0KvSTD85YsG\nXFFpOV9uSuXjNQfIyC8hppkfk6+MYljHsD/dmLyQIyeKWJuSxbp92WzYf4K84jLcnJ3oHx3M8I5h\nDOkQSqD3WfdOyk9D8grYNg9yj1Da7zFuXdeEXRkFLHygD53Cq3av5GhuMVe/+Qv9I/34sPFiVPzH\nRk+qm+dAeTF88xAcWgvtroPr3r7kL2+rVfPayr3M/GU/QzuE8u64rnax5OPOtDzGfLiBDk38mHdf\nbzzdXGwW7n2AaVrrYRWPnwbQWr98ke3HAXdqrUdcar8S7qLB2L8aFtwBHn7k3jiPN7a7MG/TEbzd\nnGka4MnB7FMserAvseEVXfPONMNYSo1A6jSmZsdf8TT89j4MfRH6TrnkpqfLLSzZks7MX/Zz6EQR\nrUO8mXRlFKO6ND1nJGxecRm/7s9m7b5s1qVkc/hEEQBN/T3oHx1M/+gQrmwbcu7NZK3h2HYj0Hcu\nNG6C+zYBjwDI2k1pRH/uzRzDHms4/53cj6YBlf8ye+DzBHYn7+WH8Dm4H4uHPg/D1X//Y7CZ1Wqc\n+0/TjQVprn8X2l1zyX1+sv4gf//fLro1D2TWnXHn/lKqYxl5JYyasQ4XJye+mdyPEF93291QVUrd\nDAzXWk+seHwH0Etr/fB5200GHgPcgMFa632X2q+Eu2hQju0w5uopK4Zx80j27MyLy3azJjmLN2/p\nzE3dwv/cDDPmEwiOrvmxrVZYNAF2fQOj/2N0La2Exar5bucxZqxOYU9GAc0CPJnQryX5xWWsTclm\ne2ouVg3ebs70qRgf0D86xBgfcP5fB4VZRphvm2f0hnJ2NwbBdRkPrQcZ2yTMhlX/QJee4jPLcJYG\n3smnk67Cx/3iI4J/3HWcmZ9/wae+7+Oti4xFaGJGX3jj47uMKa0zdkLX22HYy5dcfey7ncd4dME2\nIgI9+fSenoQHelX6M7O14lILt3z4KweyCvn6ob60CzPqrfNwP2v724BhWuu7LvDa/cD9AM2bN+9+\n+PDhyuoTov7IPQJf3Aw5B+HGDyHmJnJOlRpXhuc0w0wwmlBs2U+9rAS+uMkYkHX718YN5SrQWrN6\nbybvrUphy5FcnBR0Cg9gYMXVedfmARee28ZSZtzj2DbPuKltLYem3aDreCOAPQP//J5T2fDTdPSW\nz8jS/nwT8iD3TnoS5wvsv+h0GTNff5qp5bNxDmqBGjsXQjtc+mTKS+GXV2DdW8bgtxtmXrI5buOB\nE9z3WQIers58MqFnnY4Atlo1k+dtYUVSBrPujOOq9qG/v2bLcL/cZhknIEdrfcnhX3LlLhqkopMw\n/zaj3X/YP6HP5HObYa5/p0pX1tVSnAOzR0B+OtyzwuiSWkVaa1IyC2ns64G/p4uxr4IMKDj2x7+F\nx/94fCLF2Ma7sdEbqst4aNy+agdL20z2wikE5ydxxKczzW+fYXSdPaO0iMSP7iEmezk54YMJHD/n\n8sYzHNlo/LxzDkHfh2Hw8xedKyn5eAF3zd5EQUk5H93Rnb5RNpo8T2vj55W1xxicV5JvnINnIHgG\n8Pn2fGYl5DBxSDfuuLLTOb23bBnuLhg3VK8C0jFuqN6mtU46a5voM80wSqnrgb9VdnAJd9FglZXA\n4vtg91JjdO3hdRAaW9EMc/ldAS9LXhrMuhpQMPGHSqdvoKzEuNo/uMb4hZR7GAqO/zFQ7Wwe/kYb\nuk8o+EdA++uNwWTVmWzNamXpJ6/S//B7BKginHpOhEHPQkkuJV/chlv2Ln5oPIFhk96oXm+r04Xw\n/XOweQ407gg9J0JEL6Nr6XndYI/lFXP37HgOZBfy2s2dGN6xCR6uTlXrTaS10VvrTIhn7fnjqySv\nisUqownJMxA8A1EP/GLTrpDXAG9jdIWcrbV+SSk1HUjQWi9VSr0DXA2UATnAw2eH/4VIuIsGzWqB\nlc/Axpm10wxzKRmJMGeE0Q/8nhXnXvVayozpFQ7+AgfXQupGKC8x5tJp0hkaRRvTSvg2qfi34ssn\nzBgnYEMWq+aR2T/R6/BMbnf5CeUZhNYWTpWU8RRTmP74YwTV9Gbnvh+MpSXzKubHd/eD8Dgj6MN7\nGN97+JNXXMZ9nyWw6aCxUIqbixMBFQPYAjzdCPGw0No5kxYcpZnlKCGlqQSfPoJf4X7U6bNWEvMM\nMv6CCWkLIe3/GKvgGQgluSSmHOIfizbQvTE81r8xLqV5xl9AxTlQnAvFOag7vpZBTELYvYLjxjKH\nde3AL/DFaCPEhk435uw5tBYObzDGAYDx10TkAKN9vkVf48q8jhWeLufmDzbgm7OLz5oupriogBsy\n7+Phm4ZwSw8bjSbV2rgPkrrpj6/MJGPUNMoY2RzRk9KmcazJC+V0zlHc8w7gXXiIgOIjRpBbss7Z\n5TEdxEFrGAdVBM6h7WjerhuduvXGJzDsomWknizihhnr8fN0ZclDfQnwuvAvLpl+QAhxaTu+gsUT\n/3gc3MboIx450Pj3rFGvZkrPLWbUe+vxcHWi8HQ50Y19WHB/nyr1v6+2knxI32wEfdomSI03ZkE9\nm4e/8ZdMo6iKr9bQKIoSvxbkW9zZe7yAFYkZrEw6TnbhadxcnLiiTQgjYsK4qn3oOQvLFJSUMfqD\nDWTklfDN5H60CvG5aGkS7kKIyu35zrhSbzkA/Ox3uuBtqbmM/fBXLFbNsqkDaBvmW/mbbMlqNeb0\nydxtNGc1ijLmP6pCu7vFqkk4dJLliRmsTMrgWF4Jrs6KflHBjIgJY3C7UP5v0XbW7Mvms3t60q+S\nm7YS7kKIeiX+0Elyi8oY0sGEZiwbsVo129NyWZ5oTJ6WerL499fOzEFfGQl3IYSwY1prko7msyIx\ng0BvN+7tH1ml91U13OtuQUghhBC/U0oR08y/1laEcpzlR4QQQlSZhLsQQtRDEu5CCFEPSbgLIUQ9\nJOEuhBD1kIS7EELUQxLuQghRD0m4CyFEPWTaCFWlVAGw15SD165gINvsImqBnJdjkfNyLJdzXi20\n1hdf6buCmSNU91ZlCK2jUUolyHk5DjkvxyLnVXXSLCOEEPWQhLsQQtRDZob7RyYeuzbJeTkWOS/H\nIudVRabdUBVCCFF7pFlGCCHqIVPCXSk1XCm1VymVopR6yowaaoNS6pBSaqdSaptSymFXIlFKzVZK\nZSqlEs96Lkgp9YNSal/Fv4Fm1lgdFzmvaUqp9IrPbJtS6hoza6wOpVSEUmq1UmqXUipJKfVIxfMO\n+5ld4pzqw+floZTapJTaXnFuf694PlIptbEiFxcopS68QnZVj1PXzTJKKWcgGRgCpAHxwDit9a46\nLaQWKKUOAXFaa4fuh6uUGggUAp9prWMqnnsNOKm1fqXiF3Kg1vpJM+u8XBc5r2lAodb6X2bWVhNK\nqSZAE631FqWUL7AZuAG4Gwf9zC5xTrfg+J+XAry11oVKKVdgHfAI8BiwWGs9Xyk1E9iutf6guscx\n48q9J5CitT6gtS4F5gOjTKhDXITWeg1w8rynRwGfVnz/KcZ/NIdykfNyeFrrY1rrLRXfFwC7gWY4\n8Gd2iXNyeNpQWPHQteJLA4OBRRXP1/jzMiPcmwGpZz1Oo558aBgf0PdKqc1KqfvNLsbGQrXWxyq+\nzwAcd5XiP3tYKbWjotnGYZouLkQp1RLoCmyknnxm550T1IPPSynlrJTaBmQCPwD7gVytdXnFJjXO\nRbmhalv9tdbdgBHA5IpmgHpHG2159aWb1QdAa6ALcAx4w9xyqk8p5QN8DTyqtc4/+zVH/cwucE71\n4vPSWlu01l2AcIzWjHa2PoYZ4Z4ORJz1OLziOYentU6v+DcTWILxodUXxyvaQc+0h2aaXI9NaK2P\nV/xHswIf46CfWUXb7dfAXK314oqnHfozu9A51ZfP6wytdS6wGugDBCilzkwJU+NcNCPc44HoijvD\nbsCtwFIT6rAppZR3xY0flFLewFAg8dLvcihLgbsqvr8L+K+JtdjMmfCrcCMO+JlV3KD7D7Bba/3m\nWS857Gd2sXOqJ59XiFIqoOJ7T4zOJbsxQv7mis1q/HmZMoipovvS24AzMFtr/VKdF2FjSqlWGFfr\nYEzINs9Rz0sp9SVwJcZMdceBvwHfAAuB5sBh4BattUPdnLzIeV2J8Se+Bg4BD5zVTu0QlFL9gbXA\nTsBa8fQzGG3UDvmZXeKcxuH4n1cnjBumzhgX2Au11tMrMmQ+EARsBW7XWp+u9nFkhKoQQtQ/ckNV\nCCHqIQl3IYSohyTchRCiHpJwF0KIekjCXQgh6iEJdyGEqIck3IUQoh6ScBdCiHro/wFnkdrbizbW\nzAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9K-M0VxIW3n_",
        "outputId": "49df42d8-1007-4509-96cf-415f06c787f7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        }
      },
      "source": [
        "out = model.predict(x_n)\n",
        "X_dnorm = pd.DataFrame(SS.inverse_transform(out),\n",
        "                       index = df2.index, columns = df2.columns)\n",
        "X_dnorm.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Area</th>\n",
              "      <th>Perimeter</th>\n",
              "      <th>Aspect Ratio</th>\n",
              "      <th>Extent</th>\n",
              "      <th>Equivalent Diameter</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>43933.593750</td>\n",
              "      <td>927.870728</td>\n",
              "      <td>1.145331</td>\n",
              "      <td>0.585942</td>\n",
              "      <td>239.095444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>44734.828125</td>\n",
              "      <td>855.252686</td>\n",
              "      <td>1.241429</td>\n",
              "      <td>0.711206</td>\n",
              "      <td>234.821915</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>28202.832031</td>\n",
              "      <td>757.053162</td>\n",
              "      <td>1.035347</td>\n",
              "      <td>0.508316</td>\n",
              "      <td>184.351883</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>39658.886719</td>\n",
              "      <td>938.349426</td>\n",
              "      <td>1.007848</td>\n",
              "      <td>0.459723</td>\n",
              "      <td>222.420166</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>41914.054688</td>\n",
              "      <td>868.246948</td>\n",
              "      <td>1.192239</td>\n",
              "      <td>0.638470</td>\n",
              "      <td>231.215073</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           Area   Perimeter  Aspect Ratio    Extent  Equivalent Diameter\n",
              "0  43933.593750  927.870728      1.145331  0.585942           239.095444\n",
              "1  44734.828125  855.252686      1.241429  0.711206           234.821915\n",
              "2  28202.832031  757.053162      1.035347  0.508316           184.351883\n",
              "3  39658.886719  938.349426      1.007848  0.459723           222.420166\n",
              "4  41914.054688  868.246948      1.192239  0.638470           231.215073"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iFzzQxU7PVnz",
        "outputId": "1d5cb918-e142-4268-8def-52a100e8bbc1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        }
      },
      "source": [
        "df2.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Area</th>\n",
              "      <th>Perimeter</th>\n",
              "      <th>Aspect Ratio</th>\n",
              "      <th>Extent</th>\n",
              "      <th>Equivalent Diameter</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>47125.5</td>\n",
              "      <td>876.914364</td>\n",
              "      <td>0.790769</td>\n",
              "      <td>0.564208</td>\n",
              "      <td>244.953159</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>47722.0</td>\n",
              "      <td>853.699272</td>\n",
              "      <td>1.345455</td>\n",
              "      <td>0.732832</td>\n",
              "      <td>246.498555</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>30413.5</td>\n",
              "      <td>756.858519</td>\n",
              "      <td>0.840149</td>\n",
              "      <td>0.500271</td>\n",
              "      <td>196.783310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>41198.5</td>\n",
              "      <td>982.325678</td>\n",
              "      <td>0.984227</td>\n",
              "      <td>0.416550</td>\n",
              "      <td>229.031787</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>41654.0</td>\n",
              "      <td>838.033844</td>\n",
              "      <td>1.609756</td>\n",
              "      <td>0.615728</td>\n",
              "      <td>230.294420</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Area   Perimeter  Aspect Ratio    Extent  Equivalent Diameter\n",
              "0  47125.5  876.914364      0.790769  0.564208           244.953159\n",
              "1  47722.0  853.699272      1.345455  0.732832           246.498555\n",
              "2  30413.5  756.858519      0.840149  0.500271           196.783310\n",
              "3  41198.5  982.325678      0.984227  0.416550           229.031787\n",
              "4  41654.0  838.033844      1.609756  0.615728           230.294420"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wI1uGEixogAk",
        "outputId": "e27739d8-21f9-4f58-dc1d-05e2f9b26153",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        }
      },
      "source": [
        "fig, ax = plt.subplots(1,1)\n",
        "sbn.scatterplot(x = df2['Area'], y = X_dnorm['Area'], ax=ax)\n",
        "ax.set_xlabel('Actual Area')\n",
        "ax.set_ylabel('Predicted Area')\n",
        "ax.plot(np.arange(0, 350000, 1000), np.arange(0, 350000, 1000), color = 'k', linestyle = '--')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7f05f0b1e128>]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4eA1sW7KOKxF",
        "outputId": "797f0400-555c-443f-e080-57a180dc834e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 302
        }
      },
      "source": [
        "sbn.scatterplot(x = df2['Equivalent Diameter'], y = X_dnorm['Equivalent Diameter'])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f05f0b4c2e8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 102
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nxtYAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JR66QRUHPFFw",
        "outputId": "524015c1-7bac-45c7-da15-342d64db3255",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 399
        }
      },
      "source": [
        "encoder = Model(model.input, model.get_layer('encoded').output)\n",
        "encoder.summary()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "dense_53_input (InputLayer)  (None, 5)                 0         \n",
            "_________________________________________________________________\n",
            "dense_53 (Dense)             (None, 5)                 30        \n",
            "_________________________________________________________________\n",
            "dropout_11 (Dropout)         (None, 5)                 0         \n",
            "_________________________________________________________________\n",
            "dense_54 (Dense)             (None, 16)                96        \n",
            "_________________________________________________________________\n",
            "dropout_12 (Dropout)         (None, 16)                0         \n",
            "_________________________________________________________________\n",
            "dense_55 (Dense)             (None, 4)                 68        \n",
            "_________________________________________________________________\n",
            "encoded (Dense)              (None, 2)                 10        \n",
            "=================================================================\n",
            "Total params: 204\n",
            "Trainable params: 204\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BPlwVuuzOKzo"
      },
      "source": [
        "enc_X = pd.DataFrame(encoder.predict(x_n), index = df2.index, columns = ['X', 'Y'])"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kcMUzR5yOK2T",
        "outputId": "46b32d29-8d7f-4d38-a65f-3b5f930931b2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 198
        }
      },
      "source": [
        "enc_X.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>X</th>\n",
              "      <th>Y</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.299215</td>\n",
              "      <td>-0.398293</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.826741</td>\n",
              "      <td>-1.705351</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.696175</td>\n",
              "      <td>0.136787</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.601284</td>\n",
              "      <td>0.222473</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.942456</td>\n",
              "      <td>-0.689443</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          X         Y\n",
              "0  2.299215 -0.398293\n",
              "1  1.826741 -1.705351\n",
              "2  1.696175  0.136787\n",
              "3  2.601284  0.222473\n",
              "4  1.942456 -0.689443"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 107
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "53o4irMUOK4z",
        "outputId": "8f6d2eab-6760-47cf-d8aa-94496d5fe8b2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        }
      },
      "source": [
        "sbn.pairplot(enc_X)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x7f05f0a7f240>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 108
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nW0ckhBCtqKPmfJ8EnlRKfQwEgOvjpRyEEKKz6pDBV2sdAPLtHocQQrSVjpp2EEKILk2CrxBC2ECC\nrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC\n2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2ECCrxBC2KBDBl+l1DlKqc1KqQ+V\nUluVUiPtHpMQQrSmDhl8gQeB/6u1Pge4r+5nIYToMjpq8NVAj7rvewJf2zgWIYRodR2ydTzwC2Cd\nUuohIv+BuKCpC5VSM4AZAAMGDGif0QlRj3wGxcmwbearlPqLUurjOF+XAzcDv9RaZwO/BJ5o6j5a\n6yX6/7d3NyFW1XEYx7/PjE3I4GJ8YZAUjBJJXEw1RFCkhZm2sRZFbXQRU1BCtQl3BS0KK6JFSRmS\nLnpzIUmFZW7EXVpSthB7MRszTXNhgzWN82txzwyTmI565/7OnPN84HLPOTMDz/3fyzNn/vd/z0T0\nRkTvrFmzWhXfbJRfg3Y50s58I2Lp/31N0mbgyWJ3C/B2S0KZmbVIWed8fwUWF9t3AQcTs5iZNV1Z\n53z7gNckTQH+ophPMzOrilKWb0TsBm7OzmFmNlFKWb5mYw0PBycHBhkcOkvHlHZmdHbQ1qbsWNYE\n89Z+kh0hjcvXSm14ODhw7DR9m/fQf+oMc7qmsmFVLwu6p7mAbVIr6xtuZgCcHBgcLV6A/lNn6Nu8\nh5MDg8nJzK6My9dKbXDo7Gjxjug/dYbBobNJicyaw+VrpdYxpZ05XVP/c2xO11Q6prQnJTJrDpev\nldqMzg42rOodLeCROd8ZnR3JycyujN9ws1JraxMLuqex9fHbvNrBKsXla6XX1iZmTbs6O4ZZU7l8\nzayp6rx291K4fM3sglymE0MRkZ2haST9Dvx8CT8yEzgxQXEulzONz/kynYiI5RlhRlzGa7Dsyvjc\nT5RmPdZxvQ4rVb6XStKeiOjNzjGWM41PGTNVUZ3GudWP1UvNzMwSuHzNzBLUvXzfyg5wHs40PmXM\nVEV1GueWPtZaz/mamWWp+5mvmVmKWpavpOWSDkj6XtLa7DwAkg5J+lbSPkl7EnNslHRc0v4xx6ZL\n2iHpYHHfVYJMz0k6UozXPkn3tjJTnVR9rLP6oHblK6kdeB1YASwEHpa0MDfVqDsjoid5ac87wLlr\nFNcCOyNiPrCz2M/OBPBqMV49EfFpizPVTSXHOrMPale+wC3A9xHxY0QMAu8DK5MzlUZE7AL+OOfw\nSmBTsb0JuK8EmcyaIa0P6li+1wC/jNnvL45lC+BzSXslle2/NXdHxNFi+zegOzPMGGskfVNMS7R0\nKqSGqjrWaX1Qx/Itq9sj4iYaf/48IemO7EDnE43lMWVYIrMeuA7oAY4Cr+TGmdwkfSFp/3luK/FY\nT4g6XljnCDB3zP6c4liqiDhS3B+XtJXGn0O7clONOiZpdkQclTQbOJ4dKCKOjWxL2gB8nBhn0ouI\npeP5vgqOdVof1PHM90tgvqRrJXUADwHbMgNJ6pQ0bWQbWAbsv/BPtdQ2YHWxvRr4KDELAMUvgRH3\nU67xqpSKj3VaH9TuzDcihiStAT4D2oGNEfFdcqxuYKskaDwn70bE9owgkt4DlgAzJfUDzwIvAh9K\neoTGFbseLEGmJZJ6aEyBHAIea2WmmllX1bHO7AN/ws3MLEEdpx3MzNK5fM3MErh8zcwSuHzNzBK4\nfM3MErh8JzlJcyX9JGl6sd9V7M/LTWZ1oobdklaMOfaApJQlk5OBl5pVgKRngOsj4lFJbwKHIuKF\n7FxWL5IWAVuAG2msV/8aWB4RP6QGKymXbwVIugrYC2wE+oCeiPgnN5XVkaR1wADQCZyOiOeTI5WW\ny7ciJN0DbAeWRcSO7DxWT8XH478CBoHeiPg7OVJp1e7jxRW2gsYVpxYBLl9LEREDkj4A/nTxXpjf\ncKuA4nP3dwO3Ak+fcyEUs1YbLm52AS7fSU6Nq/GsB56KiMPAS8DLuanM7GJcvpNfH3B4zDzvG8AN\nkhYnZjKzi/AbbmZmCXzma2aWwOVrZpbA5WtmlsDla2aWwOVrZpbA5WtmlsDla2aWwOVrZpbgXxCH\n3XLCSa+nAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 360x360 with 6 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MP_9sS0hOK7b"
      },
      "source": [
        "from sklearn.covariance import EllipticEnvelope"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "veG_3IP6OK9d",
        "outputId": "1cc2fe84-1883-4ec9-d9d1-598878b249fc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        }
      },
      "source": [
        "env = EllipticEnvelope(contamination = 0.12)\n",
        "train_E = encoder.predict(X_train)\n",
        "env.fit(train_E)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "EllipticEnvelope(assume_centered=False, contamination=0.12, random_state=None,\n",
              "                 store_precision=True, support_fraction=None)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hJm5Tta-OLAD"
      },
      "source": [
        "test_E = encoder.predict(X_test)\n",
        "\n",
        "is_out = env.predict(test_E)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6N0LcL5xPBJL",
        "outputId": "321d7038-73a4-49c2-df2f-8100258b4501",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        }
      },
      "source": [
        "\n",
        "plt.scatter(test_E[is_out == 1, 0], test_E[is_out == 1, 1], color = 'k', alpha = 0.4)\n",
        "plt.scatter(test_E[is_out == -1, 0], test_E[is_out == -1, 1], color = 'b')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7f05ef2b4518>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 114
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nL5cfp1RDLUcKdEvq/e4f1SQ7NFZf1OPgwYOcOnWq5zCsMh05coR9+/Zx/vx5brzxRs6dOzfUAaO6\nGeZAkjpmpEjJbZ5OQueGYGYSHRqDNobLlA1WazQabN68mXPnznH8+HEuXrxYqV7ySRrmQNKjj7Zq\n6p3UMSOjSmrFPjPTuxRTpEEtld0UVcIYZxjWOF544QUuXLjAxo0bLxvm1Ww2Vy5F102dSzfDHEjK\nVvCT2PiX9CW1Yt+/v3UVnE5r17buL9LqlfPS0hLr1q3jqaeeWrmQc6dxj8PHoNlssmnTJpaWljh9\n+jSvvfYar776KseOHaPRaHT9mOxxnzhxghMnTnD48GEefPBBjhw5MuHo8yuy5bBXGcW9++een29t\nlC4vt/5UUpdRJZXY5+fh0KHL+4QPHSqnTzjrAb/33ntXLtbcK2kXdRw+m0r58MMPd30BKdPs7Cxz\nc3O8/fbbLC4ucv78+ZV+9JMnT3aNpfPKT+fOnWPz5s00Gg327dsX5YtaVhN/441W8s1q4qN+n3Qr\nr2TG/dwi/SSV2KH3qqfoH9pMnqQ9aH5NHqFX/bt376bRaLBu3TquvvpqlpaWALjzzju59tpreeSR\nR654wWk2mzSbTdavX78y2Oy6667jwoULUdblix7S1XkgqRsNAJOyJJXY+63Iy5qslydpF7HZGnoI\nVlZ+mpqaYnZ2lu3bt3P33XczMzNzxVTL7AVndnZ2ZQpmZmlpiU2bNg31ojYpZQzpyhYava73rgFg\nUoZkEvugFXlZk/XyJO0ijsMXseofVzakbNeuXezcuZMbbriBxcXFy6Zadr7g7N69m+npad555x3c\nfeViG3NzcxOf8ZKnDNerJl5Ey2GZn1tktWQS+6AVeVk/WHmSdhFtiqFaLFfrfLwnT57k6NGjLC4u\ncvr06SuuQJVdojAbKXzVVVdxyy230Gg0JjrjJU8ZbmEBzpy58mOLajlUO6NMUjInTwed3CtzFsck\njswXOXOliFieeeYZnn/+ec6cOcP111/Phg0bePfdd1euQNV5Gjb0SIFBx/W7fW9Aq012//7iulMm\nNcdI0lW7kQJ5Zm2E+sF64IHWC8jFi9BotJLIgQPDf57QCbJTNlah81J+AO7Otm3bojqNOuhFX3Na\npCpqN1Igz6zr+fnJr5AeeAAee+zS2xcvXnp72OQe6nBSN9lYhTVr1rBjxw4WFxdXaukxJXUYfFxf\n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\nFcYAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GkEYrKLaPBuz"
      },
      "source": [],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yx_WnObzNoni"
      },
      "source": [
        "pd.DataFrame(X_dnorm, index = )"
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
